generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@id([identifier, token])
}

model PokemonSet {
  id            String       @id @default(cuid())
  name          String
  language      String
  releaseDate   DateTime
  originalId    String
  printedTotal  Int
  ptcgoCode     String?
  series        String
  total         Int
  updatedAt     DateTime     @updatedAt
  logo          String
  symbol        String
  parentSetId   String?
  parentSet     PokemonSet?  @relation("Subsets", fields: [parentSetId], references: [id])
  subsets       PokemonSet[] @relation("Subsets")
  isBoosterPack Boolean      @default(true) // New field with default value

  @@unique([originalId, language])
}
